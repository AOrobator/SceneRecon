package com.orobator.android.scenerecon.view.customviews;import android.graphics.Canvas;import android.graphics.Paint;/** * An AlignmentCircle is an object drawn on the screen to indicate the angle a * user is facing on a particular axis */public abstract class AlignmentCircle {    protected int mBrethrenCount;    protected float mCircleAngle;    protected Paint mPaint;    protected float mRadius;    protected boolean debug = true;    public abstract void drawSelf(Canvas canvas, float rotationAngle);    /**     * Returns the width of the canvas in degrees     */    protected float getCanvasWidth() {        return 360 / mBrethrenCount * 2;    }    protected float getCanvasLengthFromDegrees(float degrees, Canvas canvas) {        return degrees * (canvas.getWidth() / getCanvasWidth());    }    protected float getDegreesFromCanvasWidth(float length, Canvas canvas) {        return length * (canvas.getWidth() / 360);    }    protected boolean isOnScreen(float rotationAngle, Canvas canvas) {        if (rotationAngle < 0) {            rotationAngle += 360;        }        float radiusDegrees = getDegreesFromCanvasWidth(mRadius, canvas);        double upperBound = rotationAngle + (getCanvasWidth() / 2) + radiusDegrees;        double lowerBound = rotationAngle - (getCanvasWidth() / 2) - radiusDegrees;        return mCircleAngle > lowerBound && mCircleAngle < upperBound;    }}